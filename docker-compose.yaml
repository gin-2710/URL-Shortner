version: "3.9"

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    volumes:
      - ./mongo-data:/data/db/
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      - mongodb_network
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: "mongodb"
      # ME_CONFIG_MONGODB_URL: mongodb://:root:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    ports:
      - "8081:8081"
    networks:
      - mongodb_network
    depends_on:
      - mongodb
  node-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node-server
    ports:
      - "3000:3000"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongodb
      - mongo-express
      - redis
    networks:
      - mongodb_network
  redis:
    image: redis:alpine3.22
    container_name: redis-server
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data
    depends_on:
      - mongodb
      - mongo-express
    networks:
      - mongodb_network
  redis-insight:
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "5540:5540"
    volumes:
      - redisinsight-data:/data
    networks:
      - mongodb_network

networks:
  mongodb_network:
    driver: bridge
    name: mongo-network

volumes:
  redis-data:
  redisinsight-data:
